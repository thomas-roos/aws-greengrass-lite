FROM ubuntu:22.04
ARG DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y wget gnupg && \
    wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null && \
    echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ jammy main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null && \
    wget -O kitware-archive-latest.asc https://apt.kitware.com/keys/kitware-archive-latest.asc && \
    gpg --dearmor - < kitware-archive-latest.asc | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null && \
    rm kitware-archive-latest.asc


# Update and install necessary packages
RUN apt-get update && apt-get -y install --no-install-recommends \
    bash-completion \
    build-essential \
    ca-certificates \
    cmake \
    dbus \
    file \
    gdb \
    git \
    pkg-config \
    python3 \
    software-properties-common \
    sudo \
    systemd \
    systemd-sysv \
    uuid-dev \
    zlib1g-dev \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Create a non-root user for building
RUN useradd -m builder && \
    echo "builder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Switch to the non-root user
USER builder
WORKDIR /home/builder

# Function to download, build and install packages
RUN echo '#!/bin/bash' > /home/builder/build_package.sh && \
    echo 'set -ex' >> /home/builder/build_package.sh && \
    echo 'mkdir -p src && cd src' >> /home/builder/build_package.sh && \
    echo 'wget $1 -O package.tar.gz' >> /home/builder/build_package.sh && \
    echo 'tar xzf package.tar.gz' >> /home/builder/build_package.sh && \
    echo 'cd $(find . -maxdepth 1 -type d | grep -v "^\.$" | head -1)' >> /home/builder/build_package.sh && \
    echo 'eval "$2"' >> /home/builder/build_package.sh && \
    echo 'make -j$(nproc)' >> /home/builder/build_package.sh && \
    echo 'sudo make ${3:-install}' >> /home/builder/build_package.sh && \
    echo 'cd /home/builder && rm -rf src' >> /home/builder/build_package.sh && \
    chmod +x /home/builder/build_package.sh

# Build and install OpenSSL
RUN /home/builder/build_package.sh \
    "https://www.openssl.org/source/openssl-3.0.8.tar.gz" \
    'export ARCH=$(uname -m); \
     case $ARCH in \
       x86_64) TARGET="linux-x86_64";; \
       aarch64) TARGET="linux-aarch64";; \
       armv7l) TARGET="linux-armv4";; \
       *) echo "Unsupported architecture: $ARCH"; exit 1;; \
     esac; \
     ./Configure no-shared no-async $TARGET -static --prefix=/usr/local --openssldir=/usr/local/ssl' \
    'install_sw'

# Build and install libcurl
RUN /home/builder/build_package.sh \
    "https://curl.se/download/curl-7.88.1.tar.gz" \
    './configure --with-openssl=/usr/local --enable-static --disable-shared --prefix=/usr/local'

# Build and install libzip
RUN /home/builder/build_package.sh \
    "https://libzip.org/download/libzip-1.8.0.tar.gz" \
    'mkdir build && cd build && cmake .. -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=/usr/local -DOPENSSL_ROOT_DIR=/usr/local'

USER root

# Update environment variables and pkg-config files
RUN echo "export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64:\$LD_LIBRARY_PATH" >> /etc/environment && \
    echo "export LIBRARY_PATH=/usr/local/lib:/usr/local/lib64:\$LIBRARY_PATH" >> /etc/environment && \
    echo "export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/lib64/pkgconfig:\$PKG_CONFIG_PATH" >> /etc/environment

# Install additional development libraries
RUN apt-get update && apt-get -y install --no-install-recommends \
    libevent-dev \
    libsqlite3-dev \
    libsystemd-dev \
    liburiparser-dev \
    libyaml-dev \
    sqlite3 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

COPY ./getty-override.conf \
  /etc/systemd/system/console-getty.service.d/override.conf

RUN echo "export MAKEFLAGS=-j$(nproc)" >> /root/.profile

CMD ["/lib/systemd/systemd"]
